#!/usr/bin/env bash

# Copyright 2018-present Open Networking Foundation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -eux -o pipefail

if [ -z ${1+x} ]; then
    echo Usage: release-chart-merge-commit chart-repo-URL website-user website-password
    exit 1
fi

chart_repo_url=$1
if ! echo ${chart_repo_url} | grep ^http; then
    echo chart repo URL is invalid
    exit 1
fi

WEBSITE_USER=$2
WEBSITE_PASSWORD=$3

# Set up the git environment to allow making commits
repo="${PWD##*/}".git

git remote add upstream https://github.com/onosproject/${repo}
git remote set-url origin git@github.com:onosproject/${repo}
git remote set-url --push upstream git@github.com:onosproject/${repo}

# load up the Helm environment
helm repo add cord https://charts.opencord.org
helm repo add atomix https://charts.atomix.io
helm repo add onos https://charts.onosproject.org
helm repo add sdran --username ${WEBSITE_USER} --password ${WEBSITE_PASSWORD} https://sdrancharts.onosproject.org
helm repo update

modified_charts=$(git show HEAD | grep Chart.yaml | grep +++ | cut -d " " -f2 | sed s^b/^^) || true

staging_area="staging"
modified_component_charts=""
for chart in ${modified_charts}; do
    git diff HEAD^ HEAD ${chart}
    version=$(git diff HEAD^ HEAD ${chart} | grep +version: | cut -d " " -f2) || true
    if [ ! -z ${version} ]; then
        # figure out the tag for this chart
        component=`echo ${chart} | cut -d "/" -f1`
        modified_component_charts="${modified_component_charts} ${component}"
        tag="${component}-${version}"
        echo $chart bumped to version $version for component $component new tag is $tag

        # Tag the tree
        git tag $tag

        # publish the tag
        git push origin ${tag}
    fi
done

if [ "${modified_component_charts}" = "" ]; then
    echo No charts were modified
    exit 0
fi

# create the tgz files for the modified charts
onos_helm_charts_dir="onos-helm-charts"
onos_helm_charts="${staging_area}/${onos_helm_charts_dir}"
mkdir -p ${onos_helm_charts}
for modified_component in ${modified_component_charts}; do
    helm dependency update ${modified_component}
    helm package ${modified_component}
    component_dir=$(basename ${modified_component}*.tgz .tgz)
    mkdir ${onos_helm_charts}/${component_dir}
    mv ${modified_component}*.tgz ${onos_helm_charts}/${component_dir}/
done

chart_index_url="${chart_repo_url}/index.yaml"
cd ${staging_area}

# Fetch the existing published chart manifest
curl -u ${WEBSITE_USER}:${WEBSITE_PASSWORD} -sLo current-index.yaml ${chart_index_url}

# merge the new charts with the existing published ones
helm repo index ${onos_helm_charts_dir} --url ${chart_repo_url}/onos-helm-charts --merge current-index.yaml

rm current-index.yaml
mv ${onos_helm_charts_dir}/index.yaml .

# generate static index files
go run github.com/onosproject/onos-helm-charts/build/cmd/index2md -file index >index.html
go run github.com/onosproject/onos-helm-charts/build/cmd/index2md -file index -html >README.md

cd ..

# use rsync to update the files on the webserver
chart_directory=${chart_repo_url#"https://"}
chmod -R g+r ${staging_area}/
ssh-keyscan -H aethercharts.onosproject.org >> ~/.ssh/known_hosts
rsync -rvzh ${staging_area}/ travis@aethercharts.onosproject.org:/srv/sites/${chart_directory}


