diff --git a/pkg/southbound/ricapie2/ricapie2.go b/pkg/southbound/ricapie2/ricapie2.go
index 1d361ed..07376ba 100644
--- a/pkg/southbound/ricapie2/ricapie2.go
+++ b/pkg/southbound/ricapie2/ricapie2.go
@@ -1,6 +1,6 @@
 // SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
 //
-// SPDX-License-Identifier: LicenseRef-ONF-Member-1.0
+// SPDX-License-Identifier: Apache-2.0
 
 package ricapie2
 
@@ -8,18 +8,18 @@ import (
 	"context"
 	"github.com/onosproject/onos-api/go/onos/e2sub/subscription"
 	e2tapi "github.com/onosproject/onos-api/go/onos/e2t/e2"
-	"github.com/onosproject/onos-e2-sm/servicemodels/e2sm_rc_pre/pdubuilder"
-	e2sm_rc_pre_ies "github.com/onosproject/onos-e2-sm/servicemodels/e2sm_rc_pre/v2/e2sm-rc-pre-v2"
-	"github.com/onosproject/onos-e2t/pkg/southbound/e2ap/types"
 	"github.com/onosproject/onos-lib-go/pkg/logging"
-	"github.com/onosproject/onos-pci/pkg/southbound/admin"
-	"github.com/onosproject/onos-pci/pkg/store"
 	app "github.com/onosproject/onos-ric-sdk-go/pkg/config/app/default"
 	"github.com/onosproject/onos-ric-sdk-go/pkg/config/event"
 	configutils "github.com/onosproject/onos-ric-sdk-go/pkg/config/utils"
 	e2client "github.com/onosproject/onos-ric-sdk-go/pkg/e2"
 	"github.com/onosproject/onos-ric-sdk-go/pkg/e2/indication"
 	sdkSub "github.com/onosproject/onos-ric-sdk-go/pkg/e2/subscription"
+	"github.com/sdran/onos-e2-sm/servicemodels/e2sm_rc_pre/pdubuilder"
+	e2sm_rc_pre_ies "github.com/sdran/onos-e2-sm/servicemodels/e2sm_rc_pre/v2/e2sm-rc-pre-v2"
+	"github.com/sdran/onos-e2t/pkg/southbound/e2ap/types"
+	"github.com/sdran/onos-pci/pkg/southbound/admin"
+	"github.com/sdran/onos-pci/pkg/store"
 	"google.golang.org/protobuf/proto"
 	"strconv"
 	"strings"
@@ -218,7 +218,7 @@ func (s *E2Session) createSubscriptionRequest(nodeID string) (subscription.Subsc
 func (s *E2Session) createEventTriggerData() []byte {
 	log.Infof("Received period value: %v", s.ReportPeriodMs)
 
-	e2smRcEventTriggerDefinition, err := pdubuilder.CreateE2SmRcPreEventTriggerDefinitionPeriodic(int32(s.ReportPeriodMs))
+	e2smRcEventTriggerDefinition, err := pdubuilder.CreateE2SmRcPreEventTriggerDefinitionPeriodic(uint32(s.ReportPeriodMs))
 	//e2smRcEventTriggerDefinition, err := pdubuilder.CreateE2SmRcPreEventTriggerDefinitionUponChange() - under test: not periodic but upon changed
 	if err != nil {
 		log.Errorf("Failed to create event trigger definition data: %v", err)
@@ -407,7 +407,7 @@ func (c *E2SmRcPreControlHandler) CreateRcControlHeader(cellID uint64, cellIDLen
 }
 
 func (c *E2SmRcPreControlHandler) CreateRcControlMessage(ranParamID int32, ranParamName string, ranParamValue int32) ([]byte, error) {
-	ranParamValueInt := pdubuilder.CreateRanParameterValueInt(ranParamValue)
+	ranParamValueInt, _ := pdubuilder.CreateRanParameterValueInt(uint32(ranParamValue))
 	newE2SmRcPrePdu, err := pdubuilder.CreateE2SmRcPreControlMessage(ranParamID, ranParamName, ranParamValueInt)
 	if err != nil {
 		return []byte{}, err
